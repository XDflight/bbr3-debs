name: Build

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch"
        required: true
        default: "v3"
    
jobs:

  build:
    name: ${{ matrix.branch }}_${{ matrix.arch }}
    runs-on: ${{ (matrix.arch == 'amd64' || matrix.arch == 'i386') && 'ubuntu-latest' || 'ubuntu-22.04-arm' }}
    strategy:
      matrix: 
        branch: ["${{ github.event.inputs.branch }}"]
        arch: ["amd64", "arm64"]
        
    steps:
      - name: "free"
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: false

      - name: "env"
        run: |
          echo -e "DATE=$(date --rfc-3339=date)" >> ${GITHUB_ENV}
          if [[ "${{ matrix.arch }}" == "amd64" ]]; then
            echo -e "MAKE_ENV=" >> ${GITHUB_ENV}
          fi
          if [[ "${{ matrix.arch }}" == "i386" ]]; then
            echo -e "MAKE_ENV=ARCH=i386 CROSS_COMPILE=i686-linux-gnu-" >> ${GITHUB_ENV}
          fi
          if [[ "${{ matrix.arch }}" == "arm64" ]]; then
            echo -e "MAKE_ENV=" >> ${GITHUB_ENV}
          fi
          if [[ "${{ matrix.arch }}" == "armhf" ]]; then
            echo -e "MAKE_ENV=ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- KBUILD_DEBARCH=armhf" >> ${GITHUB_ENV}
          fi
      
      - name: "checkout"
        uses: actions/checkout@v4
        with:
          repository: ${{ matrix.branch == 'v3' && github.repository || 'gregkh/linux' }}
          ref: ${{ matrix.branch }}
          fetch-depth: ${{ matrix.branch == 'v3' && 1 || 0 }}

      - name: "patch"
        if: ${{ matrix.branch != 'v3' }}
        run: |
          curl -L -o .patch "https://raw.githubusercontent.com/${{ github.repository }}/refs/heads/build/patches/${{ matrix.branch }}.patch"
          git apply -3 .patch

      - name: "dependencies"
        run: |
          sudo dpkg --add-architecture ${{ matrix.arch }}
          sudo apt-get update
          sudo apt-get install build-essential debhelper-compat=12 libelf-dev bc
          sudo apt-get install crossbuild-essential-${{ matrix.arch }}
          sudo apt-get install libssl-dev:${{ matrix.arch }}
          sudo apt-get clean
          sudo apt-get autoremove
        
      - name: "configure"
        run: |
          make ${{ env.MAKE_ENV }} olddefconfig

      - name: "make"
        run: |
          make ${{ env.MAKE_ENV }} -j$(nproc) bindeb-pkg LOCALVERSION=-bbr3 KDEB_PKGVERSION=${{ env.DATE }}
      
      - name: "release"
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: ../linux-*.deb
          target_commitish: ${{ matrix.branch == 'v3' && matrix.branch || 'build' }}
          tag_name: bbr3_${{ env.DATE }}_${{ matrix.branch }}_${{ matrix.arch }}
          fail_on_unmatched_files: true
          generate_release_notes: false
          append_body: true
